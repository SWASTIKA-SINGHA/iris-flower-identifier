# -*- coding: utf-8 -*-
"""project.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GSrOtSxpyOtMSMIonu9OKuoFEvf9UpXm
"""

# Import all the required tools
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score, classification_report

# Load the iris dataset
iris = load_iris()

# Convert to table form (DataFrame)
df = pd.DataFrame(iris.data, columns=iris.feature_names)

# Add species name column
df['species'] = iris.target
df['species_name'] = df['species'].apply(lambda x: iris.target_names[x])

# Show first 5 rows of the data
df.head()

# Show graphs comparing flower features
sns.pairplot(df, hue="species_name")
plt.show()

# X = inputs (sepal & petal size), y = output (flower type)
X = iris.data
y = iris.target

# Split data: 80% training, 20% testing
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train the KNN model (k = 3)
model = KNeighborsClassifier(n_neighbors=3)

# Train it using the training data
model.fit(X_train, y_train)

# Ask the model to predict on the test data
y_pred = model.predict(X_test)

# Show accuracy and performance
print("âœ… Accuracy of model:", accuracy_score(y_test, y_pred))
print("\nðŸ“Š Classification Report:\n", classification_report(y_test, y_pred, target_names=iris.target_names))

# New flower measurements: [sepal length, sepal width, petal length, petal width]
new_flower = [[5.1, 3.5, 1.4, 0.2]]  # You can change the numbers and test

# Predict the species
prediction = model.predict(new_flower)

# Show the result
print("ðŸŒ¸ Predicted flower type:", iris.target_names[prediction[0]])

sepal_length=5.1
sepal_width=3.5
petal_length=1.4
petal_width=0.2

prediction = model.predict([[sepal_length,sepal_width,petal_length,petal_width]])
print("the flower is",iris.target_names[prediction[0]])